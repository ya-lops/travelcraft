---
interface Props {
  title?: string;
  subtitle?: string;
  centered?: boolean;
  split?: boolean;
  imageSrc?: string;
}

const {
  title,
  subtitle,
  centered = false,
  split = false,
  imageSrc,
} = Astro.props;
---

<section
  class="section"
  class:list={["section", { "+centered": centered }, { "+split": split }]}
>
  <div class="container">
    <div class="section__inner">
      <slot name="start" />
      <div class="_splitContentColumn">
        <header class="section__header">
          <div class="_subtitle">{subtitle}</div>
          <div class="_title">
            <h2>{title}</h2>
          </div>
        </header>
        <div class="section__content">
          <slot />
        </div>
      </div>
      <slot name="end" />
      {
        imageSrc && (
          <aside class="section__bg">
            <img src={imageSrc} alt="" />
          </aside>
        )
      }
    </div>
  </div>
</section>

<style lang="scss">
  .section {
    --_section-padding: 5rem;

    position: relative;
    padding-block: var(--_section-padding);
    overflow-x: clip;
    animation-name: scrollOpacity;
    animation-timeline: view();
    animation-fill-mode: both;

    @media (width < 768px) {
      --_section-padding: 3rem;
    }

    & + & {
      padding-top: 0;

      .container {
        padding-top: var(--_section-padding);
        border-top: 1px solid var(--color-border);
      }
    }

    @keyframes scrollOpacity {
      0% {
        opacity: 0;
        translate: 0 5%;
      }

      50%,
      100% {
        opacity: 1;
        translate: 0 0%;
      }
    }

    &__inner {
      display: flex;
      flex-flow: column;
      gap: 3rem;
    }

    &.\+split &__inner {
      display: grid;
      grid-template-columns: repeat(2, minmax(0, 1fr));
      align-items: center;
      gap: 4rem;

      @media (width < 768px) {
        grid-template-columns: 100%;
      }
    }

    ._splitContentColumn {
      display: flex;
      flex-flow: column;
      gap: 1.5rem;

      @media (width < 768px) {
        order: 99;
      }
    }

    &:not(.\+split) ._splitContentColumn {
      display: contents;
    }

    &__header {
      .\+centered & {
        text-align: center;
      }

      ._title {
        width: min(700px, 90vw);
        // margin-inline: auto;
        font-size: var(--fz-section-header);
        text-wrap: balance;
        text-transform: capitalize;

        @media (width < 768px) {
          margin-inline: unset;
        }

        .\+centered & {
          margin-inline: auto;
        }
      }

      ._subtitle {
        margin-bottom: 2px;
        padding-bottom: 2px;
        background: linear-gradient(90deg, #ffa800 0%, #ff8a00 119.41%),
          rgba(255, 255, 255, 0.5);
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-size: var(--fz-section-subheader);
        text-transform: capitalize;
      }
    }

    &__content {
      display: flex;
      flex-flow: column;
      gap: 1rem;
      align-items: flex-start;
      text-wrap: balance;
    }

    &__bg {
      position: absolute;
      inset: 0;
      z-index: -1;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        filter: brightness(0.75);
      }
    }
  }
</style>
